{
  "id": "cc7cec44-dc22-4ddf-aa87-da5a4ad255c7",
  "prevId": "726cfa71-a0c2-4f08-a391-23c66d3a8f1b",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.libraries": {
      "name": "libraries",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "libraries_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "is_digital": {
          "name": "is_digital",
          "type": "boolean",
          "primaryKey": false,
          "notNull": true,
          "default": false
        },
        "country": {
          "name": "country",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "city": {
          "name": "city",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "parsing_rule_id": {
          "name": "parsing_rule_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "libraries_parsing_rule_id_parsing_rules_id_fk": {
          "name": "libraries_parsing_rule_id_parsing_rules_id_fk",
          "tableFrom": "libraries",
          "tableTo": "parsing_rules",
          "columnsFrom": ["parsing_rule_id"],
          "columnsTo": ["id"],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can view parsing_rules": {
          "name": "Users can view parsing_rules",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.library_requests": {
      "name": "library_requests",
      "schema": "",
      "columns": {
        "request_id": {
          "name": "request_id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "library_requests_request_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "url": {
          "name": "url",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "status": {
          "name": "status",
          "type": "request_status",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'requested'"
        },
        "note": {
          "name": "note",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "library_requests_user_id_profiles_id_fk": {
          "name": "library_requests_user_id_profiles_id_fk",
          "tableFrom": "library_requests",
          "tableTo": "profiles",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can create own requests": {
          "name": "Users can create own requests",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"],
          "withCheck": "(select auth.uid()) = \"library_requests\".\"user_id\""
        },
        "Users can view all requests": {
          "name": "Users can view all requests",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "true"
        },
        "Users can update own requests": {
          "name": "Users can update own requests",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"],
          "withCheck": "(select auth.uid()) = \"library_requests\".\"user_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.parsing_rules": {
      "name": "parsing_rules",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "parsing_rules_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "alliance": {
          "name": "alliance",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "rules": {
          "name": "rules",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can view parsing_rules": {
          "name": "Users can view parsing_rules",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "true"
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.profiles": {
      "name": "profiles",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "role": {
          "name": "role",
          "type": "role",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": true,
          "default": "'user'"
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        },
        "updated_at": {
          "name": "updated_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "profiles_id_users_id_fk": {
          "name": "profiles_id_users_id_fk",
          "tableFrom": "profiles",
          "tableTo": "users",
          "schemaTo": "auth",
          "columnsFrom": ["id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can view own users_libraries": {
          "name": "Users can view own users_libraries",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(select auth.uid()) = \"profiles\".\"id\""
        },
        "Users can update own users_libraries": {
          "name": "Users can update own users_libraries",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"],
          "using": "(select auth.uid()) = \"profiles\".\"id\"",
          "withCheck": "(select auth.uid()) = \"profiles\".\"id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    },
    "public.users_libraries": {
      "name": "users_libraries",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "bigint",
          "primaryKey": true,
          "notNull": true,
          "identity": {
            "type": "always",
            "name": "users_libraries_id_seq",
            "schema": "public",
            "increment": "1",
            "startWith": "1",
            "minValue": "1",
            "maxValue": "9223372036854775807",
            "cache": "1",
            "cycle": false
          }
        },
        "user_id": {
          "name": "user_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "library_id": {
          "name": "library_id",
          "type": "bigint",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true,
          "default": "now()"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "users_libraries_user_id_profiles_id_fk": {
          "name": "users_libraries_user_id_profiles_id_fk",
          "tableFrom": "users_libraries",
          "tableTo": "profiles",
          "columnsFrom": ["user_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "users_libraries_library_id_libraries_id_fk": {
          "name": "users_libraries_library_id_libraries_id_fk",
          "tableFrom": "users_libraries",
          "tableTo": "libraries",
          "columnsFrom": ["library_id"],
          "columnsTo": ["id"],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "policies": {
        "Users can insert own users_libraries": {
          "name": "Users can insert own users_libraries",
          "as": "PERMISSIVE",
          "for": "INSERT",
          "to": ["authenticated"],
          "withCheck": "(select auth.uid()) = \"users_libraries\".\"user_id\""
        },
        "Users can view own users_libraries": {
          "name": "Users can view own users_libraries",
          "as": "PERMISSIVE",
          "for": "SELECT",
          "to": ["authenticated"],
          "using": "(select auth.uid()) = \"users_libraries\".\"user_id\""
        },
        "Users can update own users_libraries": {
          "name": "Users can update own users_libraries",
          "as": "PERMISSIVE",
          "for": "UPDATE",
          "to": ["authenticated"],
          "using": "(select auth.uid()) = \"users_libraries\".\"user_id\"",
          "withCheck": "(select auth.uid()) = \"users_libraries\".\"user_id\""
        },
        "Users can delete own users_libraries": {
          "name": "Users can delete own users_libraries",
          "as": "PERMISSIVE",
          "for": "DELETE",
          "to": ["authenticated"],
          "using": "(select auth.uid()) = \"users_libraries\".\"user_id\""
        }
      },
      "checkConstraints": {},
      "isRLSEnabled": false
    }
  },
  "enums": {
    "public.request_status": {
      "name": "request_status",
      "schema": "public",
      "values": ["requested", "processing", "processed", "rejected"]
    },
    "public.role": {
      "name": "role",
      "schema": "public",
      "values": ["user", "admin"]
    }
  },
  "schemas": {},
  "sequences": {},
  "roles": {},
  "policies": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}
